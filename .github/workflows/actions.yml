name: run tests

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
         cd client
         npm install

      - name: Run linter
        run: |
         cd client
         npm run lint

      # - name: Run tests
      #   run: |
      #    cd client
      #    npm test

# deploy:
#   name: Deploy to Render
#   # needs: build
#   runs-on: ubuntu-latest
#   if: github.ref == 'refs/heads/main'
#   steps:
#     - name: 

#Backend workflow
# name: Backend CI/CD
# on:
#   push:
#     branches: 
#      - main
#     pull_request:
#      branches: development 
    
# jobs:
#   test:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./server
#     services:deploy:
#       postgres:
#       image: postgres:13
#       env:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: testdb
#       ports:
#       - 5432:5432
#       options: >-
#       --health-cmd pg_isready
#       --health-interval 10s
#       --health-timeout 5s
#       --health-retries 5
# steps:
#   - name: Checkout code
#   - uses: actions/checkout@v3
#   - name: Set up Python
#     uses: actions/setup-python@v4
#     with:
#     python-version: '3.10'
#   - name: Install Dependencies
#     run: |
#       cd server
#       python -m pip install --upgrade pip
#       pip install -r requirements.txt

#   - name: Run  Backend Tests
#     run: |
#       cd server    
        #export FLASK_ENV=testing

#       pytest
    

